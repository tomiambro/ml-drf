# syntax=docker/dockerfile:1.3-labs
FROM python:3.10.11-slim-bullseye

# Python build stage
FROM python as python-build-stage

# Need to specify to import Django factories
ENV PROMETHEUS_EXPORT_MIGRATIONS=false
ENV DJANGO_SECRET_KEY=s
ENV DATABASE_URL=
ENV REDIS_URL=
ENV DJANGO_ADMIN_URL=
ENV CELERY_BROKER_URL=
# ENV DJANGO_HASHID_FIELD_SALT=salty
# ENV DJANGO_AWS_ACCESS_KEY_ID=
# ENV DJANGO_AWS_SECRET_ACCESS_KEY=
# ENV DJANGO_AWS_STORAGE_BUCKET_NAME=
# ENV SENTRY_DSN=
# ENV SENTRY_ENVIRONMENT=
# ENV SENTRY_RELEASE=
ENV DJANGO_SETTINGS_MODULE=config.settings.local

WORKDIR /app/

COPY ./requirements .
RUN pip wheel --wheel-dir /usr/src/app/wheels  \
  -r local.txt

# Python 'run' stage
FROM python as python-run-stage

ARG BUILD_ENVIRONMENT=local
ARG APP_HOME=/app

ENV PYTHONUNBUFFERED 1
ENV PYTHONDONTWRITEBYTECODE 1
ENV BUILD_ENV ${BUILD_ENVIRONMENT}

WORKDIR ${APP_HOME}

# Install required system dependencies
RUN apt-get update && apt-get install --no-install-recommends -y \
  # psycopg2 dependencies
  libpq-dev \
  # Translations dependencies
  gettext \
  # cleaning up unused files
  && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
  && rm -rf /var/lib/apt/lists/*

RUN pip install --upgrade pip poetry
COPY --from=python-build-stage /usr/src/app/wheels  /wheels/

# use wheels to install python dependencies
RUN pip install --no-cache-dir --no-index --find-links=/wheels/ /wheels/* \
	&& rm -rf /wheels/

COPY . /app/
COPY locust /app/locust

CMD ["locust", "-f", "./locust/locustfile.py", "--worker", "--master-host master", "--stop-timeout=60s"]
